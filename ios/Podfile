# Minimum supported iOS version
platform :ios, '12.0'

# Disable CocoaPods analytics to improve build times
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Use static frameworks to avoid modular header issues
use_frameworks! :linkage => :static

# Define Flutter root (required for proper integration)
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first."
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end

  raise "FLUTTER_ROOT not found. Delete Generated.xcconfig and run 'flutter pub get'"
end

# Load Flutter CocoaPods helper
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Call Flutter setup
flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  # Enable testing if needed
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

# üõ†Ô∏è Critical fix for Firebase modular header issues
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
    end
    flutter_additional_ios_build_settings(target)
  end
end
